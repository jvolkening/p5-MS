package MS::Spectrum;

use strict;
use warnings;

# The following methods should be defined by all subclasses

sub id;
sub mz;
sub int;
sub rt; # in seconds
sub ms_level;

1;

__END__

=head1 NAME

MS::Spectrum - Base class for spectrum objects

=head1 SYNOPSIS

    use MS::Parser::Foo;

    my $reader = MS::Parser::Foo->new('spectra.file');

    while (my $spectrum = $reader->next_spectrum) {
        
        # $spectrum inherits from MS::Spectrum, so you can always do:
        my $id  = $spectrum->id;
        my $rt  = $spectrum->rt;
        my @mz  = $spectrum->mz;
        my $int = $spectrum->int;
        my $lvl = $spectrum->ms_level;

    }

=head1 DESCRIPTION

C<MS::Spectrum> is a base class for spectrum objects generated by file
parsers. It defines a minimum set of methods that subclasses should provide
(currently required but not enforced). Subclasses can (and should) provide
additional methods depending on the information available - see individual
subclass documentation for details.

=head1 METHODS

These methods are required to be defined by subclasses.

=over 4

=item B<id>

Returns the spectrum ID as a string. The ID format is not defined and depends
on the source of the data file.

=item B<rt>

Returns the retention time of the spectrum in seconds. Subclasses should
ensure that any necessary conversions are carried out to return a value with
the proper units.

=item B<mz>

Returns an array containing ordered mass/charge values for the spectrum (must be equal
in length to that returned by int() ).

=item B<int>

Returns an array containing ordered intensity values for the spectrum (must be equal
in length to that returned by mz() ).

=item B<ms_level>

Returns the MS level (e.g. MS1, MS2) of the spectrum as a positive integer.
Should return undefined if the level cannot be determined from input.

=back

=head1 CAVEATS AND BUGS

Please reports bugs to the author.

=head1 AUTHOR

Jeremy Volkening <jdv@base2bio.com>

=head1 COPYRIGHT AND LICENSE

Copyright 2016 Jeremy Volkening

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see <http://www.gnu.org/licenses/>.

=cut

